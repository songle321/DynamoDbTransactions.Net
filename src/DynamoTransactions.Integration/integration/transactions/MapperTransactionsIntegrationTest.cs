using System;
using System.Collections.Generic;
using Amazon.DynamoDBv2;
using Amazon.DynamoDBv2.DataModel;
using Amazon.DynamoDBv2.Model;
using com.amazonaws.services.dynamodbv2.transactions.exceptions;
using static DynamoTransactions.Integration.AssertStatic;

// <summary>
// Copyright 2014-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// 
// Licensed under the Amazon Software License (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
// 
//  http://aws.amazon.com/asl/
// 
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express
// or implied. See the License for the specific language governing permissions
// and limitations under the License.
// </summary>
namespace com.amazonaws.services.dynamodbv2.transactions
{

    public class MapperTransactionsIntegrationTest : IntegrationTest
    {

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @DynamoDBTable(tableName = HASH_TABLE_NAME) public static class ExampleHashKeyItem
        public class ExampleHashKeyItem
        {
            internal string id;
            internal string something;
            internal ISet<string> someSet;

            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBHashKey(attributeName = ID_ATTRIBUTE) @DynamoDBAutoGeneratedKey public String getId()
            public virtual string Id
            {
                get
                {
                    return id;
                }
                set
                {
                    this.id = value;
                }
            }


            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBAttribute public String getSomething()
            public virtual string Something
            {
                get
                {
                    return something;
                }
                set
                {
                    this.something = value;
                }
            }


            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBAttribute public java.util.Set<String> getSomeSet()
            public virtual ISet<string> SomeSet
            {
                get
                {
                    return someSet;
                }
                set
                {
                    this.someSet = value;
                }
            }


            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBIgnore public java.util.Map<String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getKey()
            public virtual Dictionary<string, AttributeValue> Key
            {
                get
                {
                    return Collections.SingletonMap(IdAttribute, new AttributeValue
                    {
                        S = Id,

                    });
                }
            }

            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBIgnore public java.util.Map<String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExpectedValues()
            public virtual Dictionary<string, AttributeValue> ExpectedValues
            {
                get
                {
                    Dictionary<string, AttributeValue> expected = new Dictionary<string, AttributeValue>();
                    expected["something"] = new AttributeValue
                    {
                        S = Something,

                    };
                    if (SomeSet != null)
                    {
                        // we need to sort the values, because AttributeValue internally
                        // copies our set to an ordered list
                        List<string> valuesList = new List<string>(SomeSet);
                        valuesList.Sort();
                        expected["someSet"] = new AttributeValue
                        {
                            SS = valuesList,

                        };
                    }
                    //JAVA TO C# CONVERTER TODO TASK: There is no .NET Dictionary equivalent to the Java 'putAll' method:
                    foreach (var keyValue in Key) expected.Add(keyValue.Key, keyValue.Value);
                    return expected;
                }
            }

        }

        private ExampleHashKeyItem _hashItem0;


        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Before public void setup()
        public virtual void Setup()
        {
            Transaction t = Manager.NewTransaction();
            _hashItem0 = new ExampleHashKeyItem();
            _hashItem0.Id = Guid.NewGuid().ToString();
            _hashItem0.Something = "val";
            _hashItem0.SomeSet = new HashSet<string>(Arrays.AsList("one", "two"));
            t.SaveAsync(_hashItem0).Wait();
            Key0 = NewKey(IntegHashTableName);
            Item0 = new Dictionary<string, AttributeValue>(Key0);
            Item0["s_someattr"] = new AttributeValue("val");
            Item0["ss_otherattr"] = new AttributeValue
            {
                SS = { "one", "two" }
            };
            Dictionary<string, AttributeValue> putResponse = t.PutItemAsync(new PutItemRequest
            {
                TableName = IntegHashTableName,
                Item = Item0,
                ReturnValues = ReturnValue.ALL_OLD,

            }).Result.Attributes;
            AssertNull(putResponse);
            t.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, Key0, Item0, true);
            AssertItemNotLocked(IntegHashTableName, _hashItem0.Key, _hashItem0.ExpectedValues, true);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @After public void teardown()
        public virtual void Teardown()
        {
            Transaction t = Manager.NewTransaction();
            t.DeleteItemAsync(new DeleteItemRequest
            {
                TableName = IntegHashTableName,
                Key = Key0,

            }).Wait();
            t.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, Key0, false);
        }

        private ExampleHashKeyItem NewItem()
        {
            ExampleHashKeyItem item1 = new ExampleHashKeyItem();
            item1.Id = Guid.NewGuid().ToString();
            return item1;
        }

        //JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in .NET:
        //ORIGINAL LINE: public MapperTransactionsIntegrationTest() throws java.io.IOException
        public MapperTransactionsIntegrationTest() : base(new DynamoDBContextConfig
        {
            TableNamePrefix = TableNamePrefix + "_"
        })
        {
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void phantomItemFromDelete()
        public virtual void PhantomItemFromDelete()
        {
            ExampleHashKeyItem item1 = NewItem();
            Transaction transaction = Manager.NewTransaction();
            transaction.DeleteAsync(item1).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, transaction.Id, true, false);
            transaction.RollbackAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, item1.Key, false);
            transaction.DeleteAsync(long.MaxValue).Wait();
        }

        /*
		 * GetItem tests
		 */

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void lockItem()
        public virtual void LockItem()
        {
            ExampleHashKeyItem item1 = NewItem();

            Transaction t1 = Manager.NewTransaction();
            Transaction t2 = Manager.NewTransaction();

            ExampleHashKeyItem loadedItem = t1.LoadAsync(item1).Result;

            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, false); // we're not applying locks
            AssertNull(loadedItem);

            t2.DeleteAsync(item1).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t2.Id, true, false); // we're not applying deletes either

            t2.CommitAsync().Wait();

            try
            {
                t1.CommitAsync().Wait();
                Fail();
            }
            catch (TransactionRolledBackException)
            {
            }

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, false);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void lock2Items()
        public virtual void Lock2Items()
        {
            ExampleHashKeyItem item1 = NewItem();
            ExampleHashKeyItem item2 = NewItem();

            Transaction t0 = Manager.NewTransaction();
            item1.Something = "val";
            t0.SaveAsync(item1);

            t0.CommitAsync().Wait();

            Transaction t1 = Manager.NewTransaction();

            ExampleHashKeyItem loadedItem1 = t1.LoadAsync(item1).Result;
            AssertItemLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, t1.Id, false, false);
            AssertEquals(item1.ExpectedValues, loadedItem1.ExpectedValues);

            ExampleHashKeyItem loadedItem2 = t1.LoadAsync(item2).Result;
            AssertItemLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, t1.Id, false, false);
            AssertItemLocked(IntegHashTableName, item2.Key, t1.Id, true, false);
            AssertNull(loadedItem2);

            t1.CommitAsync().Wait();
            t1.DeleteAsync(long.MaxValue).Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, true);
            AssertItemNotLocked(IntegHashTableName, item2.Key, false);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void getItemWithDelete()
        public virtual void GetItemWithDelete()
        {
            Transaction t1 = Manager.NewTransaction();
            ExampleHashKeyItem loadedItem1 = t1.LoadAsync(_hashItem0).Result;
            AssertEquals(_hashItem0.ExpectedValues, loadedItem1.ExpectedValues);
            AssertItemLocked(IntegHashTableName, _hashItem0.Key, loadedItem1.ExpectedValues, t1.Id, false, false);

            t1.DeleteAsync(_hashItem0).Wait();
            AssertItemLocked(IntegHashTableName, _hashItem0.Key, _hashItem0.ExpectedValues, t1.Id, false, false);

            ExampleHashKeyItem loadedItem2 = t1.LoadAsync(_hashItem0).Result;
            AssertNull(loadedItem2);
            AssertItemLocked(IntegHashTableName, _hashItem0.Key, _hashItem0.ExpectedValues, t1.Id, false, false);

            t1.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, _hashItem0.Key, false);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void getItemNotExists()
        public virtual void GetItemNotExists()
        {
            Transaction t1 = Manager.NewTransaction();
            ExampleHashKeyItem item1 = NewItem();

            ExampleHashKeyItem loadedItem1 = t1.LoadAsync(item1).Result;
            AssertNull(loadedItem1);
            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, false);

            ExampleHashKeyItem loadedItem2 = t1.LoadAsync(item1).Result;
            AssertNull(loadedItem2);
            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, false);

            t1.CommitAsync().Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, false);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void getItemAfterPutItemInsert()
        public virtual void GetItemAfterPutItemInsert()
        {
            Transaction t1 = Manager.NewTransaction();
            ExampleHashKeyItem item1 = NewItem();
            item1.Something = "wef";

            ExampleHashKeyItem loadedItem1 = t1.LoadAsync(item1).Result;
            AssertNull(loadedItem1);
            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, false);

            t1.SaveAsync(item1);
            AssertItemLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, t1.Id, true, true);

            ExampleHashKeyItem loadedItem2 = t1.LoadAsync(item1).Result;
            AssertEquals(item1.ExpectedValues, loadedItem2.ExpectedValues);
            AssertItemLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, t1.Id, true, true);

            t1.CommitAsync().Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, true);
        }

        /*
		 * Transaction isolation and error tests
		 */

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void conflictingWrites()
        public virtual void ConflictingWrites()
        {
            ExampleHashKeyItem item1 = NewItem();
            Transaction t1 = Manager.NewTransaction();
            Transaction t2 = Manager.NewTransaction();
            Transaction t3 = Manager.NewTransaction();

            // Finish t1
            ExampleHashKeyItem t1Item = new ExampleHashKeyItem();
            t1Item.Id = item1.Id;
            t1Item.Something = "t1";

            t1.SaveAsync(t1Item).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t1Item.ExpectedValues, t1.Id, true, true);

            t1.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, item1.Key, t1Item.ExpectedValues, true);

            // Begin t2
            ExampleHashKeyItem t2Item = new ExampleHashKeyItem();
            t2Item.Id = item1.Id;
            t2Item.Something = "t2";
            t2Item.SomeSet = new HashSet<string> {"extra"};

            t2.SaveAsync(t2Item).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t2Item.ExpectedValues, t2.Id, false, true);

            // Begin and finish t3
            ExampleHashKeyItem t3Item = new ExampleHashKeyItem();
            t3Item.Id = item1.Id;
            t3Item.Something = "t3";
            t3Item.SomeSet = new HashSet<string> {"things"};

            t3.SaveAsync(t3Item).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t3Item.ExpectedValues, t3.Id, false, true);

            t3.CommitAsync().Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, t3Item.ExpectedValues, true);

            // Ensure t2 rolled back
            try
            {
                t2.CommitAsync().Wait();
                Fail();
            }
            catch (TransactionRolledBackException)
            {
            }

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
            t3.DeleteAsync(long.MaxValue).Wait();

            AssertItemNotLocked(IntegHashTableName, item1.Key, t3Item.ExpectedValues, true);
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @DynamoDBTable(tableName = HASH_TABLE_NAME) public static class ExampleVersionedHashKeyItem
        public class ExampleVersionedHashKeyItem
        {
            internal string id;
            internal long? version = null;

            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBHashKey(attributeName = ID_ATTRIBUTE) @DynamoDBAutoGeneratedKey public String getId()
            public virtual string Id
            {
                get
                {
                    return id;
                }
                set
                {
                    this.id = value;
                }
            }


            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBVersionAttribute public Nullable<long> getVersion()
            public virtual long? Version
            {
                get
                {
                    return version;
                }
                set
                {
                    this.version = value;
                }
            }


            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBIgnore public java.util.Map<String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getKey()
            public virtual Dictionary<string, AttributeValue> Key
            {
                get
                {
                    return Collections.SingletonMap(IdAttribute, new AttributeValue
                    {
                        S = Id,

                    });
                }
            }

            //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
            //ORIGINAL LINE: @DynamoDBIgnore public java.util.Map<String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExpectedValues()
            public virtual Dictionary<string, AttributeValue> ExpectedValues
            {
                get
                {
                    Dictionary<string, AttributeValue> expected = new Dictionary<string, AttributeValue>();
                    expected["version"] = new AttributeValue
                    {
                        N = Version.ToString(),

                    };
                    //JAVA TO C# CONVERTER TODO TASK: There is no .NET Dictionary equivalent to the Java 'putAll' method:
                    foreach(var keyValue in Key) expected.Add(keyValue.Key, keyValue.Value);
                    return expected;
                }
            }

        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void createVersionedItemWhenItemAlreadyExists()
        public virtual void CreateVersionedItemWhenItemAlreadyExists()
        {
            ExampleVersionedHashKeyItem item1 = NewVersionedItem();

            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1);
            t1.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, true);

            ExampleVersionedHashKeyItem item2 = new ExampleVersionedHashKeyItem();
            item2.Id = item1.Id;
            Transaction t2 = Manager.NewTransaction();
            try
            {
                t2.SaveAsync(item2);
                Fail();
            }
            catch (ConditionalCheckFailedException)
            {
                t2.RollbackAsync().Wait();
            }
            AssertItemNotLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, true);

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void createVersionedItemInConflictingTransactions()
        public virtual void CreateVersionedItemInConflictingTransactions()
        {
            ExampleVersionedHashKeyItem item1 = NewVersionedItem();

            // establish the item with version 1
            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1);
            AssertItemLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, t1.Id, true, true);

            // while the item is being created in the first transaction, create it in another transaction
            ExampleVersionedHashKeyItem item2 = new ExampleVersionedHashKeyItem();
            item2.Id = item1.Id;
            Transaction t2 = Manager.NewTransaction();
            t2.SaveAsync(item2);
            t2.CommitAsync().Wait();

            // try to commit the original transaction
            try
            {
                t1.CommitAsync().Wait();
                Fail();
            }
            catch (TransactionRolledBackException)
            {
            }
            AssertItemNotLocked(IntegHashTableName, item1.Key, item1.ExpectedValues, true);

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void deleteVersionedItemWithOutOfDateVersion()
        public virtual void DeleteVersionedItemWithOutOfDateVersion()
        {
            ExampleVersionedHashKeyItem item1 = NewVersionedItem();

            // establish the item with version 1
            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1);
            t1.CommitAsync().Wait();

            // update the item to version 2
            Transaction t2 = Manager.NewTransaction();
            ExampleVersionedHashKeyItem item2 = t2.LoadAsync(item1).Result;
            t2.SaveAsync(item2).Wait();
            t2.CommitAsync().Wait();

            // try to delete with an outdated view of the item
            Transaction t3 = Manager.NewTransaction();
            try
            {
                t3.DeleteAsync(item1).Wait();
                Fail();
            }
            catch (ConditionalCheckFailedException)
            {
                t3.RollbackAsync().Wait();
            }
            AssertItemNotLocked(IntegHashTableName, item2.Key, item2.ExpectedValues, true);

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
            t3.DeleteAsync(long.MaxValue).Wait();
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void reusingMapperInstanceWithOutOfDateVersionThrowsOnSave()
        public virtual void ReusingMapperInstanceWithOutOfDateVersionThrowsOnSave()
        {
            ExampleVersionedHashKeyItem item1 = NewVersionedItem();

            // establish the item with version 1
            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1).Wait();
            t1.CommitAsync().Wait();

            // update the item to version 2 and saveAsync
            Transaction t2 = Manager.NewTransaction();
            ExampleVersionedHashKeyItem item2 = t2.LoadAsync(item1).Result;
            t2.SaveAsync(item2).Wait();
            t2.CommitAsync().Wait();

            Transaction t3 = Manager.NewTransaction();
            t3.LoadAsync(item1).Wait();
            try
            {
                t3.SaveAsync(item1).Wait();
                Fail();
            }
            catch (ConditionalCheckFailedException)
            {
                t3.RollbackAsync().Wait();
            }
            AssertItemNotLocked(IntegHashTableName, item2.Key, item2.ExpectedValues, true);

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
            t3.DeleteAsync(long.MaxValue).Wait();
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void deleteVersionedItemInConflictingTransaction()
        public virtual void DeleteVersionedItemInConflictingTransaction()
        {
            ExampleVersionedHashKeyItem item1 = NewVersionedItem();

            // establish the item with version 1
            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1).Wait();
            t1.CommitAsync().Wait();

            // start to delete the item
            Transaction t2 = Manager.NewTransaction();
            t2.DeleteAsync(item1).Wait();

            // update the item to version 2
            Transaction t3 = Manager.NewTransaction();
            ExampleVersionedHashKeyItem item2 = t3.LoadAsync(item1).Result;
            t3.SaveAsync(item2).Wait();
            t3.CommitAsync().Wait();

            // try to commit the delete
            try
            {
                t2.CommitAsync().Wait();
                Fail();
            }
            catch (TransactionRolledBackException)
            {
            }

            AssertItemNotLocked(IntegHashTableName, item2.Key, item2.ExpectedValues, true);

            t1.DeleteAsync(long.MaxValue).Wait();
            t2.DeleteAsync(long.MaxValue).Wait();
            t3.DeleteAsync(long.MaxValue).Wait();
        }

        private ExampleVersionedHashKeyItem NewVersionedItem()
        {
            ExampleVersionedHashKeyItem item1 = new ExampleVersionedHashKeyItem();
            item1.Id = Guid.NewGuid().ToString();
            return item1;
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void readCommitted()
        public virtual void ReadCommitted()
        {
            ExampleHashKeyItem item1 = NewItem();
            item1.Something = "example";

            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, true);

            ExampleHashKeyItem loadedItem1 = Manager.LoadAsync(item1, Transaction.IsolationLevel.Committed).Result;
            AssertNull(loadedItem1);

            t1.CommitAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, item1.Key, true);

            ExampleHashKeyItem loadedItem2 = Manager.LoadAsync(item1, Transaction.IsolationLevel.Committed).Result;
            AssertNotNull(loadedItem2);
            AssertEquals(item1.ExpectedValues, loadedItem2.ExpectedValues);

            t1.DeleteAsync(long.MaxValue).Wait();
        }

        //JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
        //ORIGINAL LINE: @Test public void readUncommitted()
        public virtual void ReadUncommitted()
        {
            ExampleHashKeyItem item1 = NewItem();
            item1.Something = "example";

            Transaction t1 = Manager.NewTransaction();
            t1.SaveAsync(item1).Wait();
            AssertItemLocked(IntegHashTableName, item1.Key, t1.Id, true, true);

            ExampleHashKeyItem loadedItem1 = Manager.LoadAsync(item1, Transaction.IsolationLevel.Uncommitted).Result;
            AssertNotNull(loadedItem1);
            AssertEquals(item1.ExpectedValues, loadedItem1.ExpectedValues);

            t1.RollbackAsync().Wait();
            AssertItemNotLocked(IntegHashTableName, item1.Key, false);

            ExampleHashKeyItem loadedItem2 = Manager.LoadAsync(item1, Transaction.IsolationLevel.Committed).Result;
            AssertNull(loadedItem2);

            t1.DeleteAsync(long.MaxValue).Wait();
        }
    }
}